<Window x:Class="Fiscal_Management_System.views.device.AddOrEditDevice"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:val="clr-namespace:Fiscal_Management_System.model.validation_rules"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:conv="clr-namespace:Fiscal_Management_System"
        mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Height="500" Width="500">
    <!-- Window Resources. Adding validation to every textbox -->
    <Window.Resources>
        <Style TargetType="TextBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <AdornedElementPlaceholder x:Name="textBox"/>
                            <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <!-- Divided to Label and inputs -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="6*" />
            <RowDefinition Height="3.7*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <!-- Label -->
        <Label Content="{Binding WindowTitle}" FontSize="26"/>
        <!-- Inputs -->
        <GroupBox Header="Dane urządzenia" Grid.Row="1">
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="36*" />
                    <RowDefinition Height="36*" />
                    <RowDefinition Height="36*" />
                    <RowDefinition Height="36*" />
                    <RowDefinition Height="36*" />
                    <RowDefinition Height="36*" />

                </Grid.RowDefinitions>
                <!-- Labels of inputs -->
                <Label Grid.Row="0" Content="Numer unikatowy" FontSize="16"/>
                <Label Grid.Row="1" Content="Numer ewidencyjny" FontSize="16"/>
                <Label Grid.Row="2" Content="Numer fabryczny" FontSize="16"/>
                <Label Grid.Row="3" Content="Model urządzenia" FontSize="16"/>
                <Label Grid.Row="4" Content="Data fiskalizacji" FontSize="16"/>
                <Label Grid.Row="5" Content="Co ile miesięcy przegląd" FontSize="16"/>
                <!-- Textbox inputs. Stack panels with TextBox + Label for validation output -->
                <!-- Unique number -->
                <TextBox x:Name="tbx_uniquenmb" VerticalAlignment="Center" Grid.Column="1" Margin="0,0,0,10" >
                    <TextBox.Text>
                        <Binding Path="Entity.UniqueNumber" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <val:TextLengthValidationRule PropertyName="Numer unikatowy" MinLength="6" MaxLength="50" ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True"/>
                                <val:OnlyNumbersAndLettersValidationRule PropertyName="Numer unikatowy" ValidationStep="RawProposedValue"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <!-- Register number -->
                <TextBox x:Name="tbx_registernmb" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" Margin="0,0,0,0" >
                    <TextBox.Text>
                        <Binding Path="Entity.RegisterNumber" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <!-- Serial number -->
                <TextBox x:Name="tbx_serialnmb" VerticalAlignment="Center" Grid.Column="1" Grid.Row="2">
                    <TextBox.Text>
                        <Binding Path="Entity.SerialNumber" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                
                <!-- Model of device -->
                <ComboBox Name="cbx_revenue" Grid.Column="1" Grid.Row="3" Margin="0,5,0,10" 
                          SelectedItem="{Binding Entity.Model, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          ItemsSource="{Binding DeviceModelManager.AllData}" 
                          DisplayMemberPath="Name" 
                          IsSynchronizedWithCurrentItem="True"/>
                
                <!-- Date of initialization-->
                <DatePicker SelectedDateFormat="Long" 
                            Grid.Column="1" 
                            Grid.Row="4" 
                            Margin="0,5,0,10" 
                            SelectedDate="{Binding Entity.DateOfInitialization}"
                            FirstDayOfWeek="Monday"/>

                <!-- Inspection periodic time in months -->
                <TextBox x:Name="tbx_inspectiontime" VerticalAlignment="Center" Grid.Column="1" Grid.Row="5"  >
                    <TextBox.Text>
                        <Binding Path="Entity.InspectionPeriodicTimeInMonths" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <val:OnlyNumbersValidationRule PropertyName="Cykliczny czas przeglądu" ValidationStep="RawProposedValue"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>
        </GroupBox>

        <GroupBox Header="Miejsce instalacji" Grid.Row="2">
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="36*" />
                    <RowDefinition Height="36*" />
                    <RowDefinition Height="36*" />
                </Grid.RowDefinitions>
                <!-- Labels of inputs -->
                <Label Grid.Row="0" Content="Województwo" FontSize="16"/>
                <Label Grid.Row="1" Content="Miasto" FontSize="16"/>
                <Label Grid.Row="2" Content="Ulica" FontSize="16"/>
                
                <!-- Textbox inputs. Stack panels with TextBox + Label for validation output -->
                <!-- State -->
                <ComboBox Name="cbx_province" Grid.Column="1" SelectedItem="{Binding Entity.Place.State}" VerticalAlignment="Center" ItemsSource="{Binding StateManager.AllData}" IsSynchronizedWithCurrentItem="True">
               
                </ComboBox>
                <TextBox x:Name="tbx_city" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" >
                    <TextBox.Text>
                        <Binding Path="Entity.Place.City" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <val:TextLengthValidationRule PropertyName="Miasto" MinLength="2" MaxLength="100" ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True"/>
                                <val:GrandLetterFirstValidationRule PropertyName="Miasto" ValidationStep="RawProposedValue"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBox x:Name="tbx_street" VerticalAlignment="Center" Grid.Column="1" Grid.Row="2" >
                    <TextBox.Text>
                        <Binding Path="Entity.Place.Street" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <val:TextLengthValidationRule PropertyName="Ulica" MinLength="2" MaxLength="50" ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True"/>
                                <val:GrandLetterFirstValidationRule PropertyName="Ulica" ValidationStep="RawProposedValue"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>
        </GroupBox>
        <!-- Add button-->
        <Button Name="btnOK" Click="closeWindow" Grid.Column="1" Grid.Row="10" Margin="10,5,10,5" Content="{Binding ButtonText}" Command="{Binding ConfirmButtonCommand}" CommandParameter="{Binding Entity}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbx_uniquenmb}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbx_city}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbx_street}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbx_inspectiontime}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>
